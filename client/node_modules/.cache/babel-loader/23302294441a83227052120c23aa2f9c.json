{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janhavi\\\\Desktop\\\\react\\\\sepm\\\\final\\\\client\\\\src\\\\Components\\\\PayWithPayPal.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nfunction PayWithPayPal(props) {\n  const {\n    items,\n    total\n  } = props;\n  const [paidFor, setPaidFor] = useState(false);\n  const [error, setError] = useState(null);\n  const paypalRef = useRef();\n  useEffect(() => {\n    window.paypal.Buttons({\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          intent: 'CAPTURE',\n          purchase_units: [{\n            description: `Hostel checkout ${items}`,\n            amount: {\n              currency_code: 'INR',\n              value: 10.00\n            }\n          }]\n        });\n      },\n      onApprove: async (data, actions) => {\n        const order = await actions.order.capture();\n        setPaidFor(true);\n        console.log('ORDER', order);\n      },\n      onError: err => {\n        setError(err);\n        console.error('ERROR', err);\n      }\n    }).render(paypalRef.current);\n  }, [items]);\n\n  if (paidFor) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SweetAlert, {\n      success: true,\n      title: \"Good job!\",\n      onConfirm: this.onConfirm,\n      onCancel: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"You clicked the button!\"));\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Error in processing order. Please Retry again\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"you need to pay \", total, \" /-RS\"), /*#__PURE__*/React.createElement(\"div\", {\n    ref: paypalRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default PayWithPayPal;","map":{"version":3,"sources":["C:/Users/janhavi/Desktop/react/sepm/final/client/src/Components/PayWithPayPal.js"],"names":["React","useState","useEffect","useRef","SweetAlert","PayWithPayPal","props","items","total","paidFor","setPaidFor","error","setError","paypalRef","window","paypal","Buttons","createOrder","data","actions","order","create","intent","purchase_units","description","amount","currency_code","value","onApprove","capture","console","log","onError","err","render","current","onConfirm","onCancel","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AACA,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBF,KAAzB;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMY,SAAS,GAAGV,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,MAAM,CAACC,MAAP,CACKC,OADL,CACa;AACLC,MAAAA,WAAW,EAAE,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC5B,eAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;AACxBC,UAAAA,MAAM,EAAC,SADiB;AAExBC,UAAAA,cAAc,EAAE,CAAC;AACbC,YAAAA,WAAW,EAAG,mBAAkBjB,KAAM,EADzB;AAEbkB,YAAAA,MAAM,EAAE;AACJC,cAAAA,aAAa,EAAE,KADX;AAEJC,cAAAA,KAAK,EAAE;AAFH;AAFK,WAAD;AAFQ,SAArB,CAAP;AAUH,OAZI;AAaLC,MAAAA,SAAS,EAAE,OAAOV,IAAP,EAAaC,OAAb,KAAyB;AAChC,cAAMC,KAAK,GAAG,MAAMD,OAAO,CAACC,KAAR,CAAcS,OAAd,EAApB;AACAnB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAoB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBX,KAArB;AACH,OAjBI;AAkBLY,MAAAA,OAAO,EAAEC,GAAG,IAAI;AACZrB,QAAAA,QAAQ,CAACqB,GAAD,CAAR;AACAH,QAAAA,OAAO,CAACnB,KAAR,CAAc,OAAd,EAAuBsB,GAAvB;AACH;AArBI,KADb,EAwBKC,MAxBL,CAwBYrB,SAAS,CAACsB,OAxBtB;AAyBH,GA1BQ,EA0BN,CAAC5B,KAAD,CA1BM,CAAT;;AA4BA,MAAIE,OAAJ,EAAa;AACT,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,MAAnB;AAAoB,MAAA,KAAK,EAAC,WAA1B;AAAsC,MAAA,SAAS,EAAE,KAAK2B,SAAtD;AAAiE,MAAA,QAAQ,EAAE,KAAKC,QAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CADJ;AAOH;;AAED,MAAI1B,KAAJ,EAAW;AACP,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADJ;AAKH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAC2B,MAAAA,SAAS,EAAC;AAAX,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAsB9B,KAAtB,UAFJ,eAGI;AAAK,IAAA,GAAG,EAAEK,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH;;AAED,eAAeR,aAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nfunction PayWithPayPal (props) {\r\n    const { items, total } = props\r\n    const [paidFor, setPaidFor] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const paypalRef = useRef();\r\n\r\n    useEffect(() => {\r\n        window.paypal\r\n            .Buttons({\r\n                createOrder: (data, actions) => {\r\n                    return actions.order.create({\r\n                        intent:'CAPTURE',\r\n                        purchase_units: [{\r\n                            description: `Hostel checkout ${items}`,\r\n                            amount: {\r\n                                currency_code: 'INR',\r\n                                value: 10.00,\r\n                            }\r\n                        }]\r\n                    });\r\n                },\r\n                onApprove: async (data, actions) => {\r\n                    const order = await actions.order.capture();\r\n                    setPaidFor(true);\r\n                    console.log('ORDER', order);\r\n                },\r\n                onError: err => {\r\n                    setError(err);\r\n                    console.error('ERROR', err);\r\n                },\r\n            })\r\n            .render(paypalRef.current);\r\n    }, [items]);\r\n\r\n    if (paidFor) {\r\n        return (\r\n            <div>\r\n                <SweetAlert success title=\"Good job!\" onConfirm={this.onConfirm} onCancel={this.onCancel}>\r\n  You clicked the button!\r\n</SweetAlert>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div>\r\n                Error in processing order. Please Retry again\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={{textAlign:\"center\"}}>\r\n            \r\n            <div>you need to pay {total} /-RS</div>\r\n            <div ref={paypalRef} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PayWithPayPal"]},"metadata":{},"sourceType":"module"}